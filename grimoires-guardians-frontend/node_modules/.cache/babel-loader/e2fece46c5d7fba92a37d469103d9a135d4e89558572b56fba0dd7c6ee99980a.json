{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sphins\\\\Dropbox\\\\htdocs\\\\Projet\\\\grimoire_guardians_full\\\\grimoires-guardians-frontend\\\\src\\\\components\\\\CharacterManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, TextField, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterManagement = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [newCharacter, setNewCharacter] = useState({\n    name: '',\n    description: ''\n  });\n  useEffect(() => {\n    // Charger les personnages depuis le backend (API à implémenter)\n    // Exemple:\n    // fetch('/api/characters')\n    //     .then(response => response.json())\n    //     .then(data => setCharacters(data));\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCharacter({\n      ...newCharacter,\n      [name]: value\n    });\n  };\n  const handleCreateCharacter = () => {\n    // Ajouter un personnage via le backend (API à implémenter)\n    // Exemple:\n    // fetch('/api/characters', {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(newCharacter),\n    // }).then(response => response.json())\n    //   .then(character => setCharacters([...characters, character]));\n\n    // Pour l'instant, nous ajoutons le personnage localement\n    setCharacters([...characters, newCharacter]);\n    setNewCharacter({\n      name: '',\n      description: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Gestion des Personnages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: 16,\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Cr\\xE9er un Nouveau Personnage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Nom\",\n        name: \"name\",\n        value: newCharacter.name,\n        onChange: handleInputChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Description\",\n        name: \"description\",\n        value: newCharacter.description,\n        onChange: handleInputChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleCreateCharacter,\n        children: \"Cr\\xE9er\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Liste des Personnages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), characters.map((character, index) => /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: 16,\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: character.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CharacterManagement, \"flshb2pa/CQBEJxlNN3Khh7pReY=\");\n_c = CharacterManagement;\nexport default CharacterManagement;\nvar _c;\n$RefreshReg$(_c, \"CharacterManagement\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","TextField","Paper","jsxDEV","_jsxDEV","CharacterManagement","_s","characters","setCharacters","newCharacter","setNewCharacter","name","description","handleInputChange","e","value","target","handleCreateCharacter","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","marginBottom","label","onChange","fullWidth","margin","color","onClick","map","character","index","_c","$RefreshReg$"],"sources":["C:/Users/sphins/Dropbox/htdocs/Projet/grimoire_guardians_full/grimoires-guardians-frontend/src/components/CharacterManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, TextField, Paper } from '@mui/material';\r\n\r\nconst CharacterManagement = () => {\r\n    const [characters, setCharacters] = useState([]);\r\n    const [newCharacter, setNewCharacter] = useState({ name: '', description: '' });\r\n\r\n    useEffect(() => {\r\n        // Charger les personnages depuis le backend (API à implémenter)\r\n        // Exemple:\r\n        // fetch('/api/characters')\r\n        //     .then(response => response.json())\r\n        //     .then(data => setCharacters(data));\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewCharacter({ ...newCharacter, [name]: value });\r\n    };\r\n\r\n    const handleCreateCharacter = () => {\r\n        // Ajouter un personnage via le backend (API à implémenter)\r\n        // Exemple:\r\n        // fetch('/api/characters', {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify(newCharacter),\r\n        // }).then(response => response.json())\r\n        //   .then(character => setCharacters([...characters, character]));\r\n\r\n        // Pour l'instant, nous ajoutons le personnage localement\r\n        setCharacters([...characters, newCharacter]);\r\n        setNewCharacter({ name: '', description: '' });\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h5\" gutterBottom>Gestion des Personnages</Typography>\r\n            <Paper style={{ padding: 16, marginBottom: 16 }}>\r\n                <Typography variant=\"h6\">Créer un Nouveau Personnage</Typography>\r\n                <TextField\r\n                    label=\"Nom\"\r\n                    name=\"name\"\r\n                    value={newCharacter.name}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    value={newCharacter.description}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleCreateCharacter}>\r\n                    Créer\r\n                </Button>\r\n            </Paper>\r\n            <Box>\r\n                <Typography variant=\"h6\">Liste des Personnages</Typography>\r\n                {characters.map((character, index) => (\r\n                    <Paper key={index} style={{ padding: 16, marginBottom: 16 }}>\r\n                        <Typography variant=\"h6\">{character.name}</Typography>\r\n                        <Typography variant=\"body1\">{character.description}</Typography>\r\n                    </Paper>\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CharacterManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}