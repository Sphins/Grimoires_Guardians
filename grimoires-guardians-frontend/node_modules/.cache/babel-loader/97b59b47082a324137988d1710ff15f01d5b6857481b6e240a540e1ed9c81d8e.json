{"ast":null,"code":"import axios from 'axios';\n\n// Configurer l'instance d'Axios avec l'URL de base du back-end\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL // Utiliser la variable d'environnement pour l'URL de base\n});\n\n// Intercepteur de requêtes pour ajouter le token d'authentification\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Intercepteur de réponses pour gérer les erreurs globales\napi.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Gérer les erreurs 401 globalement, par exemple rediriger vers la page de connexion\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","window","location","href"],"sources":["C:/Users/sphins/Dropbox/htdocs/Projet/grimoire_guardians_full/grimoires-guardians-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configurer l'instance d'Axios avec l'URL de base du back-end\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL // Utiliser la variable d'environnement pour l'URL de base\r\n});\r\n\r\n// Intercepteur de requêtes pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Intercepteur de réponses pour gérer les erreurs globales\r\napi.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response && error.response.status === 401) {\r\n            // Gérer les erreurs 401 globalement, par exemple rediriger vers la page de connexion\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;AAC3C,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACxBC,MAAM,IAAI;EACN,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDM,KAAK,IAAI;EACL,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAf,GAAG,CAACM,YAAY,CAACY,QAAQ,CAACV,GAAG,CACzBU,QAAQ,IAAIA,QAAQ,EACpBH,KAAK,IAAI;EACL,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjD;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EACA,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}