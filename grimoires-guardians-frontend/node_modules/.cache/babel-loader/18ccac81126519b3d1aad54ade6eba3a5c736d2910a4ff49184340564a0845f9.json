{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sphins_portabel\\\\Dropbox\\\\htdocs\\\\Projet\\\\grimoire_guardians_full\\\\grimoires-guardians-frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Paper, List, ListItem, ListItemText } from '@mui/material';\nimport { rollDice } from '../utils/diceRoller';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [userName, setUserName] = useState('');\n  useEffect(() => {\n    const fetchUserName = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await api.get('/api/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserName(response.data.username);\n      } catch (error) {\n        console.error('Error fetching user name', error);\n      }\n    };\n    fetchUserName();\n  }, []);\n  const handleDiceRoll = command => {\n    const {\n      result,\n      rolls,\n      total\n    } = rollDice(command);\n    return {\n      result,\n      rolls,\n      total\n    };\n  };\n  const handleSendMessage = () => {\n    if (messageInput.trim() !== '') {\n      let message = {\n        user: userName,\n        text: messageInput\n      };\n      if (messageInput.startsWith('/r ')) {\n        const command = messageInput.substring(3);\n        const {\n          result,\n          rolls,\n          total\n        } = handleDiceRoll(command);\n        message = {\n          user: userName,\n          text: `${total}`,\n          isDiceRoll: true,\n          command,\n          rolls,\n          total\n        };\n      }\n      setMessages([...messages, message]);\n      setMessageInput('');\n    }\n  };\n  const handleInputChange = event => {\n    setMessageInput(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const getResultColor = (total, rolls, sides) => {\n    if (sides === 20) {\n      if (rolls.includes(1)) {\n        return 'red';\n      } else if (rolls.includes(20)) {\n        return 'green';\n      }\n    }\n    return 'inherit';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        flex: 1,\n        overflow: 'auto',\n        marginBottom: '16px',\n        padding: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: message.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 42\n            }, this),\n            secondary: message.isDiceRoll ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                component: \"span\",\n                style: {\n                  color: getResultColor(message.total, message.rolls, parseInt(message.command.split('d')[1]))\n                },\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                component: \"div\",\n                style: {\n                  color: 'grey'\n                },\n                children: [\"(\", message.command, \": \", message.rolls.join(', '), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              style: {\n                display: 'block'\n              },\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Message\",\n        fullWidth: true,\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: messageInput,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginLeft: '8px',\n          marginTop: '16px',\n          height: '56px'\n        },\n        onClick: handleSendMessage,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"4MaX1N+Dmksbd6K/fuuSqvsjQJk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Typography","Paper","List","ListItem","ListItemText","rollDice","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","messages","setMessages","messageInput","setMessageInput","userName","setUserName","fetchUserName","token","localStorage","getItem","response","get","headers","Authorization","data","username","error","console","handleDiceRoll","command","result","rolls","total","handleSendMessage","trim","message","user","text","startsWith","substring","isDiceRoll","handleInputChange","event","target","value","handleKeyPress","key","preventDefault","getResultColor","sides","includes","display","flexDirection","height","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","style","flex","overflow","marginBottom","padding","map","index","alignItems","primary","fontWeight","secondary","component","color","parseInt","split","join","label","fullWidth","margin","onChange","onKeyPress","marginLeft","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sphins_portabel/Dropbox/htdocs/Projet/grimoire_guardians_full/grimoires-guardians-frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, TextField, Button, Typography, Paper, List, ListItem, ListItemText } from '@mui/material';\r\nimport { rollDice } from '../utils/diceRoller';\r\nimport api from '../services/api';\r\n\r\nconst Chat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUserName = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await api.get('/api/user', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                setUserName(response.data.username);\r\n            } catch (error) {\r\n                console.error('Error fetching user name', error);\r\n            }\r\n        };\r\n\r\n        fetchUserName();\r\n    }, []);\r\n\r\n    const handleDiceRoll = (command) => {\r\n        const { result, rolls, total } = rollDice(command);\r\n        return { result, rolls, total };\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (messageInput.trim() !== '') {\r\n            let message = { user: userName, text: messageInput };\r\n            if (messageInput.startsWith('/r ')) {\r\n                const command = messageInput.substring(3);\r\n                const { result, rolls, total } = handleDiceRoll(command);\r\n                message = {\r\n                    user: userName,\r\n                    text: `${total}`,\r\n                    isDiceRoll: true,\r\n                    command,\r\n                    rolls,\r\n                    total\r\n                };\r\n            }\r\n            setMessages([...messages, message]);\r\n            setMessageInput('');\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setMessageInput(event.target.value);\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    const getResultColor = (total, rolls, sides) => {\r\n        if (sides === 20) {\r\n            if (rolls.includes(1)) {\r\n                return 'red';\r\n            } else if (rolls.includes(20)) {\r\n                return 'green';\r\n            }\r\n        }\r\n        return 'inherit';\r\n    };\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n            <Typography variant=\"h5\" gutterBottom>Chat</Typography>\r\n            <Paper style={{ flex: 1, overflow: 'auto', marginBottom: '16px', padding: '8px' }}>\r\n                <List>\r\n                    {messages.map((message, index) => (\r\n                        <ListItem key={index} alignItems=\"flex-start\">\r\n                            <ListItemText\r\n                                primary={<Typography style={{ fontWeight: 'bold' }}>{message.user}</Typography>}\r\n                                secondary={\r\n                                    message.isDiceRoll ? (\r\n                                        <>\r\n                                            <Typography variant=\"h4\" component=\"span\" style={{ color: getResultColor(message.total, message.rolls, parseInt(message.command.split('d')[1])) }}>\r\n                                                {message.text}\r\n                                            </Typography>\r\n                                            <Typography variant=\"caption\" component=\"div\" style={{ color: 'grey' }}>\r\n                                                ({message.command}: {message.rolls.join(', ')})\r\n                                            </Typography>\r\n                                        </>\r\n                                    ) : (\r\n                                        <Typography component=\"span\" style={{ display: 'block' }}>\r\n                                            {message.text}\r\n                                        </Typography>\r\n                                    )\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Paper>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <TextField\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    value={messageInput}\r\n                    onChange={handleInputChange}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginLeft: '8px', marginTop: '16px', height: '56px' }}\r\n                    onClick={handleSendMessage}\r\n                >\r\n                    Envoyer\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}